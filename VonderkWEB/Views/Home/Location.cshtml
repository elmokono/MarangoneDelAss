@model VonderkWEB.Models.GoogleMap
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Location</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    @*<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD45MV5f-mZNViFGscdmo8lMr60IHQynNQ&callback=initMap" type="text/javascript"></script>*@
    @*<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=API Key"></script>*@
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <script src="~/scripts/jquery-3.3.1.min.js"></script>
    <script src="~/scripts/bootstrap.min.js"></script>
    <script src="~/scripts/jquery.validate.min.js"></script>
    <script src="~/scripts/jquery.validate.unobtrusive.min.js"></script>
    <script type="text/javascript">

        var markers = @Html.Raw(ViewBag.Markers);
        window.onload = function () {
            var mapOptions = {
                center: new google.maps.LatLng(markers[0].lat, markers[0].lng),
                zoom: 4,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            var infoWindow = new google.maps.InfoWindow();
            var map = new google.maps.Map(document.getElementById("dvMap"), mapOptions);
            for (i = 0; i < markers.length; i++) {
                var data = markers[i]
                var myLatlng = new google.maps.LatLng(data.lat, data.lng);
                var marker = new google.maps.Marker({
                    position: myLatlng,
                    map: map,
                    title: data.title
                });
                (function (marker, data) {
                    google.maps.event.addListener(marker, "click", function (e) {
                        infoWindow.setContent(data.description);
                        infoWindow.open(map, marker);
                    });
                })(marker, data);
            }
        }
    </script>
</head>
<body>


    <div id="dvMap" class="card" style="width: 100%; height: 400px">
    </div>




    <ul id='myid'>
        <li id="">Todos</li>
        <li id="second">second</li>
        <li id="car">car</li>
        <li id="third">third</li>
    </ul>


    <script>

        //var gmarkers1 = [];
        //var markers1 = [];
        //var infowindow = new google.maps.InfoWindow({ content: '' });

        //// Our markers
        //markers1 = [
        //    ['0', 'Title', 52.4357808, 4.991315699999973, 'car'],
        //    ['1', 'Title', 52.4357808, 4.981315699999973, 'third'],
        //    ['2', 'Title', 52.4555687, 5.039231599999994, 'car'],
        //    ['3', 'Title', 52.4555687, 5.029231599999994, 'second']
        //];

        /**
         * Function to init map
         */

        //function initialize() {
        //    var center = new google.maps.LatLng(52.4357808, 4.991315699999973);
        //    var mapOptions = {
        //        zoom: 12,
        //        center: center,
        //        mapTypeId: google.maps.MapTypeId.TERRAIN
        //    };

        //    map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
        //    for (i = 0; i < markers1.length; i++) {
        //        addMarker(markers1[i]);
        //    }
        //}

        /**
         * Function to add marker to map
         */

        //function addMarker(marker) {
        //    var category = marker[4];
        //    var title = marker[1];
        //    var pos = new google.maps.LatLng(marker[2], marker[3]);
        //    var content = marker[1];

        //    marker1 = new google.maps.Marker({
        //        title: title,
        //        position: pos,
        //        category: category,
        //        map: map
        //    });

        //    gmarkers1.push(marker1);

        //    // Marker click listener
        //    google.maps.event.addListener(marker1, 'click', (function (marker1, content) {
        //        return function () {
        //            console.log('Gmarker 1 gets pushed');
        //            infowindow.setContent(content);
        //            infowindow.open(map, marker1);
        //            map.panTo(this.getPosition());
        //            map.setZoom(15);
        //        }
        //    })(marker1, content));
        //}

        /**
         * Function to filter markers by category
         */

        filterMarkers = function (category) {
            console.log(category);
            for (i = 0; i < markers.length; i++) {
                marker = markers[i];
                // If is same category or category not picked
                if (marker.category == category || category.length === 0) {
                    marker.setVisible(true);
                }
                // Categories don't match
                else {
                    marker.setVisible(false);
                }
            }
        }

        //function valBeforefilterMarkers(e) {

        //    alert("You have clicked button id = " + e.id + " and button value = " + document.getElementById(e.id).value);
        //    $("#myid li").click(function () {
        //        alert(this.id); // get id of clicked li
        //    });

        //}

        $("#myid li").click(function () {
            filterMarkers(this.id)
            //alert(this.id); // get id of clicked li
        });

        // Init map
        //initialize();

    </script>





    @*@using (Html.BeginForm("Location", "Home", FormMethod.Post))
        {
            <div class="container py-4">
                <h5 class="text-center">HOW TO CREATE GOOGLE MAP AND ADD LOCATION DYNAMICALLY USING ASP.NET MVC 5</h5>
                <div class="card">
                    <div class="card-header bg-danger">
                        <h6 class="card-title text-uppercase text-white">Google Map Location</h6>
                    </div>
                    <div class="card-body">
                        <button style="margin-bottom:10px;" type="button" data-target="#myMap" data-toggle="modal" class="btn btn-danger btn-sm rounded-0"><i class="fa fa-plus-circle"></i> Add New Location</button>

                        <div class="modal fade" id="myMap">
                            <div class="modal-dialog modal-lg">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h4 class="modal-title">Add New Location</h4>
                                        <button type="button" class="close" data-dismiss="modal">×</button>
                                    </div>
                                    <div class="modal-body">
                                        <div class="row">
                                            <div class="col-sm-4 col-md-4 col-xs-12">
                                                <div class="form-group">
                                                    <label>City Name:</label>
                                                    @Html.EditorFor(model => model.CityName, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.CityName, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-sm-4 col-md-4 col-xs-12">
                                                <div class="form-group">
                                                    <label>Latitude:</label>
                                                    @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-sm-4 col-md-4 col-xs-12">
                                                <div class="form-group">
                                                    <label>Longitude:</label>
                                                    @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-12 col-md-12 col-xs-12">
                                                <div class="form-group">
                                                    <label>Description:</label>
                                                    <input name="Description" rows="5" class="form-control"></input>
                                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-danger rounded-0" data-dismiss="modal">Close</button>
                                        <button class="btn btn-primary rounded-0">Submit</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        }*@




</body>
</html>  