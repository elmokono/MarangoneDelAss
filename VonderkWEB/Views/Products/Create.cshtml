@model VonderkWEB.Models.Product

@{
    ViewBag.Title = "Create";
}


<script>
    $(function () {

        $("#sortable").sortable();
        $("#sortable").disableSelection();
    });
</script>

<style>



    #sortable {
        list-style-type: none;
        margin: 0;
        padding: 0;
        width: 800px;
    }

        #sortable li {
            margin: 3px 3px 3px 0;
            padding: 1px;
            float: left;
            width: 200px;
            font-size: 1em;
            text-align: center;
        }

            #sortable li span {
                position: absolute;
                margin-left: -1.3em;
            }

    .gallery {
        margin-left: 100px;
        width: 100%;
    }

    .fichasgallery {
        width: 100%;
    }

    .testing {
        padding: 20px;
        margin: 20px;
        border: solid brown 1px;
    }

    .demo {
        width: 100%;
    }
</style>


<h2>Create</h2>


<div class="container">
    <form role="form" method="post" action="/Products/Create" enctype="multipart/form-data">
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Product</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.BrandID, "BrandID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("BrandID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.BrandID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CategoryID, "CategoryID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Features, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Features, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Features, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ProductCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="col-25">
                    Imagen
                </div>
                <div class="col-75">
                    <input type="file" multiple="multiple" id="imageFiles" name="imageFiles" data-buttonname="btn-primary" data-input="false" data-buttontext="Buscar">
                </div>
            </div>

            <div class="row">
                <div class="col-25">
                    Ficha
                </div>
                <div class="col-75">
                    <input type="file" multiple="multiple" id="fichaFiles" name="fichaFiles" data-buttonname="btn-primary" data-input="false" data-buttontext="Buscar">
                </div>
            </div>


            <div class="row">
                <div class="col-25">
                    IES
                </div>
                <div class="col-75">
                    <input type="file" multiple="multiple" id="iesFiles" name="iesFiles" data-buttonname="btn-primary" data-input="false" data-buttontext="Buscar">
                </div>
            </div>


            <input id="hiddenField" name="hiddenField" type="hidden" value="">

            <div class="demo">

                <div class="gallery">
                    <ul id="sortable" class="gallery"></ul>
                </div>
                <div class="fichasgallery">
                    <div id='file-list-display'>

                    </div>
                </div>

            </div><!-- End demo -->


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    </form>

</div>


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


<script>


    $(function () {



        var $sortableList = $("#sortable");


        // Multiple images preview in browser
        var imagesPreview = function (input, placeToInsertImagePreview) {

            if (input.files) {
                var filesAmount = input.files.length;

                for (i = 0; i < filesAmount; i++) {

                    var reader = new FileReader();

                    reader.onload = function (event) {
                        var idx = $('li.text-preview').length;
                        console.log(input.files[idx]);
                        var p = $('<li class="text-preview ui-state-default" data-name="' + input.files[idx].name + '">' + '</li>').appendTo(placeToInsertImagePreview);
                        $('<img width="100" height="100" class="img_class">').attr('src', event.target.result).appendTo(p);

                    }
                    reader.readAsDataURL(input.files[i]);

                }


            }

        };

        $('#postedFiles').on('change', function () {
            $(".demo").prepend($('<h4>Arrastrar y soltar para cambiar el orden de las imagenes</h4>'));
            $(".demo").prepend($('<hr/>'));

            var files = $('#postedFiles')[0].files;
            var totalSize = 0;

            for (var i = 0; i < files.length; i++) {
                // calculate total size of all files
                totalSize += files[i].size;
            }
            //1x10^9 = 1 GB
            //var sizeInGb = totalSize / 1000000000;
            if (totalSize < 10485760) {
                imagesPreview(this, 'ul.gallery');
            } else {

                alert("A superado el limite máximo de subida (10MB). Por favor, intente nuevamente");
                window.location.reload(true);
            }



        });

        $('#filesuploadtecnica').on('change', function () {


            var files = $('#filesuploadtecnica')[0].files;
            var totalSize = 0;

            for (var i = 0; i < files.length; i++) {
                // calculate total size of all files
                totalSize += files[i].size;
            }
            //1x10^9 = 1 GB
            //var sizeInGb = totalSize / 1000000000;
            if (totalSize > 10485760) {
                alert("A superado el limite máximo de subida (10MB). Por favor, intente nuevamente");

            }


        });


        $('#filesuploadies').on('change', function () {

            var files = $('#filesuploadies')[0].files;
            var totalSize = 0;

            for (var i = 0; i < files.length; i++) {
                // calculate total size of all files
                totalSize += files[i].size;
            }
            //1x10^9 = 1 GB
            //var sizeInGb = totalSize / 1000000000;
            if (totalSize > 10485760) {
                alert("A superado el limite máximo de subida (10MB). Por favor, intente nuevamente");

            }

        });

        //$('#selector').change(function () {
        //    alert($('#selector').val());
        //});

        //$('#selector').on('change keydown paste input propertychange click keyup blur', handler);

        var listValues = [];

        var sortEventHandler = function (event, ui) {

            console.log("New sort order!");



            var listElements = $sortableList.children();
            var listOrder = [];

            console.log(listElements); // [ <li>, <li>, ... ]

            listElements.each(function (index, element) {
                listValues.push(element.innerText);
                listOrder.push($(element).data('name'));
            });

            var myJSON = JSON.stringify(listOrder);

            document.getElementById("hiddenField").value = myJSON;

        };

        $sortableList.sortable({
            stop: sortEventHandler
        });

        console.log(listValues); // [ "Item 1", "Item 2", ... ]



    });


    //----------------------------------------------------NEW MULTIPLE FICHA TECNICA


    (function () {
        //var fileCatcher = document.getElementById('file-catcher');
        var fileInput = document.getElementById('filesuploadtecnica');
        var fileListDisplay = document.getElementById('file-list-display');

        var fileList = [];
        var renderFileList, sendFile;

        //fileCatcher.addEventListener('submit', function (evnt) {
        //    evnt.preventDefault();
        //    fileList.forEach(function (file) {
        //        sendFile(file);
        //    });
        //});


        fileInput.addEventListener('change', function (evnt) {
            fileList = [];
            for (var i = 0; i < fileInput.files.length; i++) {
                fileList.push(fileInput.files[i]);
            }
            renderFileList();
        });

        renderFileList = function () {
            fileListDisplay.innerHTML = '';
            fileList.forEach(function (file, index) {
                var fileDisplayEl = document.createElement('p');
                fileDisplayEl.setAttribute("class", "testing col-25")
                fileDisplayEl.innerHTML = (index + 1) + ': ' + file.name + '<input type="text" id="selector">';
                fileListDisplay.appendChild(fileDisplayEl);
            });
        };



        //#selector.oninput = function () {
        //    //result.innerHTML = input.value;
        //    alert(input.value);
        //};





    })();

</script>
