@model VonderkWEB.Models.Product

@{
    ViewBag.Title = "Edasdait";
}



<script>
    $(function () {

        $("#sortable").sortable();
        $("#sortable").disableSelection();
    });
</script>

<style>

    #sortable {
        list-style-type: none;
        margin: 0;
        padding: 0;
        width: 800px;
    }

        #sortable li {
            margin: 3px 3px 3px 0;
            padding: 1px;
            float: left;
            width: 200px;
            font-size: 1em;
            text-align: center;
        }

            #sortable li span {
                position: absolute;
                margin-left: -1.3em;
            }

    .gallery {
        margin-left: 100px;
        width: 100%;
    }

    .fichasgallery {
        width: 100%;
    }

    .testing {
        padding: 20px;
        margin: 20px;
        border: solid brown 1px;
    }

    .testingies {
        padding: 20px;
        margin: 20px;
        border: solid green 1px;
    }

    .demo {
        width: 100%;
    }

    .asset {
        max-width: 300px;
    }

    .flex-container {
        display: flex;
        flex-wrap: nowrap;

    }

        .flex-container .box {
            background-color: #f1f1f1;
            width: 100%;
            margin: 10px;
            text-align: center;

            display: block;
            overflow: auto;
        }
</style>

<div class="content">

    <h2>Edit</h2>

    <div class="content">
        <form role="form" name="form1" id="form1" method="post" action="/Products/Edit" enctype="multipart/form-data">

            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Product</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ProductID)

                <div class="form-group">
                    <div class="col-25">
                        @Html.LabelFor(model => model.BrandID, "BrandID", htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-75">
                        @Html.DropDownList("BrandID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.BrandID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-25">
                        @Html.LabelFor(model => model.CategoryID, "CategoryID", htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>

                    <div class="col-75">
                        @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">

                    <div class="col-25">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>

                    <div class="col-75">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-25">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>

                    <div class="col-75">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-25">
                        @Html.LabelFor(model => model.Features, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>

                    <div class="col-75">
                        @Html.EditorFor(model => model.Features, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Features, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-25">
                        @Html.LabelFor(model => model.ProductCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>


                    <div class="col-75">
                        @Html.EditorFor(model => model.ProductCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-25">
                        Imagen
                    </div>
                    <div class="col-75">
                        <input type="file" multiple="multiple" id="imageFiles" name="imageFiles" data-buttonname="btn-primary" data-input="false" data-buttontext="Buscar">
                    </div>
                </div>

                <div class="row">
                    <div class="col-25">
                        Ficha
                    </div>
                    <div class="col-75">
                        <input type="file" multiple="multiple" id="fichaFiles" name="fichaFiles" data-buttonname="btn-primary" data-input="false" data-buttontext="Buscar">
                    </div>
                </div>


                <div class="row">
                    <div class="col-25">
                        IES
                    </div>
                    <div class="col-75">
                        <input type="file" multiple="multiple" id="iesFiles" name="iesFiles" data-buttonname="btn-primary" data-input="false" data-buttontext="Buscar">
                    </div>
                </div>

                <div class="flex-container">
                    <div class="demo">

                        <div class="box gallery">
                            <h2>Images Archivos</h2>
                            <ul id="sortable" class="imageGallery">
                                @foreach (var item in Model.ProductAssets.Where(x => x.AssetType == "IMG"))
                                {
                                    <li class="asset ui-state-default" data-name="@item.Name" data-id="@item.AssetID">
                                        <img src="@item.FileName" width="200" height="200" alt="1">
                                        <a href="javascript:remove(@item.AssetID);">Borrar</a>
                                    </li>
                                }
                            </ul>
                        </div>
                        <div class="box fichasgallery">
                            <div id='file-list-display'>
                                <h2>Files Archivos</h2>
                                <ul class="gallery">
                                    @foreach (var item in Model.ProductAssets.Where(x => x.AssetType == "PDF"))
                                    {
                                        <li class="asset ui-state-default" data-name="@item.Name" data-id="@item.AssetID">
                                            <img src="@item.FileName" style="height:160px" alt="1">
                                            <a href="javascript:remove(@item.AssetID);">Borrar</a>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </div>
                        <div class="box IESgallery">
                            <div id='ies-list-display'>
                                <h2>IES Archivos</h2>
                                <ul class="gallery">

                                    @foreach (var item in Model.ProductAssets.Where(x => x.AssetType == "IES"))
                                    {
                                        <li class="asset ui-state-default" data-name="@item.Name" data-id="@item.AssetID">
                                            <img src="~/Images/Icons/ico-ies.png" style="height:60px" alt="1">
                                            @item.Name<br /><br />
                                            <a href="javascript:remove(@item.AssetID);">Borrar</a>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </div>

                    </div><!-- End demo -->

                </div>
                @Html.Hidden("deletedAssets")
                @Html.Hidden("labeledAssets")

                <div class="form-group">
                    <div class="col-md-offset-2 col-75">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </form>
    </div>
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }



</div>


<script>

    //Delete images before submit
    function remove(assetID) {

        $('li.asset[data-id=' + assetID + ']').remove();
        o = $('#deletedAssets').val();
        $('#deletedAssets').val(o + "," + assetID);
    }
    function removeByName(assetName) {
        $('li.asset[data-name="' + assetName + '"]').remove();
    }
    function removeAsset(assetID) {

        $('p.testing[data-id=' + assetID + ']').remove();

    }

    $(function () {


        var $sortableList = $("#sortable");


        // Multiple images preview in browser
        var imagesPreview = function (input, placeToInsertImagePreview) {

            if (input.files) {
                var filesAmount = input.files.length;

                for (i = 0; i < filesAmount; i++) {

                    var reader = new FileReader();

                    reader.onload = function (event) {
                        var idx = $('li.text-preview').length;
                        console.log(input.files[idx]);
                        var p = $('<li class="asset text-preview ui-state-default" data-id="' + input.files[idx].name + '" data-name="' + input.files[idx].name + '">' + '</li>').appendTo(placeToInsertImagePreview);
                        $('<img width="100" height="100" class="img_class">').attr('src', event.target.result).appendTo(p);
                        $('<a onclick="removeByName(\'' + input.files[idx].name + '\')">Borrar</a>').appendTo(p);
                    }
                    reader.readAsDataURL(input.files[i]);

                }


            }

        };

        $('#imageFiles').on('change', function () {


            var files = $('#imageFiles')[0].files;
            var totalSize = 0;

            for (var i = 0; i < files.length; i++) {
                totalSize += files[i].size;
            }
            if (totalSize < 10485760) {
                imagesPreview(this, 'ul.imageGallery');
            } else {
                alert("A superado el limite máximo de subida (10MB). Por favor, intente nuevamente");
                window.location.reload(true);
            }
        });

        $('#filesuploadtecnica').on('change', function () {
            var files = $('#filesuploadtecnica')[0].files;
            var totalSize = 0;

            for (var i = 0; i < files.length; i++) {
                totalSize += files[i].size;
            }
            if (totalSize > 10485760) {
                alert("A superado el limite máximo de subida (10MB). Por favor, intente nuevamente");
            }
        });

        $('#filesuploadies').on('change', function () {

            var files = $('#filesuploadies')[0].files;
            var totalSize = 0;

            for (var i = 0; i < files.length; i++) {
                totalSize += files[i].size;
            }

            if (totalSize > 10485760) {
                alert("A superado el limite máximo de subida (10MB). Por favor, intente nuevamente");

            }

        });

        var listValues = [];

        var sortEventHandler = function (event, ui) {

            console.log("New sort order!");

            var listElements = $sortableList.children();
            var listOrder = [];

            console.log(listElements); // [ <li>, <li>, ... ]

            listElements.each(function (index, element) {
                listValues.push(element.innerText);
                listOrder.push($(element).data('name'));
            });

            var myJSON = JSON.stringify(listOrder);

            document.getElementById("hiddenField").value = myJSON;

        };

        $sortableList.sortable({
            stop: sortEventHandler
        });

        console.log(listValues); // [ "Item 1", "Item 2", ... ]



    });

    //---------------------------------Multiple product assets (Fichas)---------------------------------
    (function () {
        var fileInput = document.getElementById('fichaFiles');
        var fileListDisplay = document.getElementById('file-list-display');

        fileInput.addEventListener('change', function (evnt) {

            for (var i = 0; i < fileInput.files.length; i++) {

                var file = fileInput.files[i];
                var fileDisplayEl = document.createElement('li');
                fileDisplayEl.setAttribute("class", "testing asset col-25")
                fileDisplayEl.setAttribute("data-id", file.name)
                fileDisplayEl.setAttribute("data-name", file.name)
                fileDisplayEl.setAttribute("data-new", "true")
                fileDisplayEl.innerHTML = (i + 1) + ': ' + file.name + '<input type="text" data-name="' + file.name + '" class="fileLabel"  id="selector"><a onclick="removeByName(\'' + file.name + '\')">Borrar</a>';
                fileListDisplay.appendChild(fileDisplayEl);
            }

        });

    })();


    //---------------------------------Multiple product assets (IES)---------------------------------
    (function () {
        var iesInput = document.getElementById('iesFiles');
        var iesListDisplay = document.getElementById('ies-list-display');

        iesInput.addEventListener('change', function (evnt) {

            $('li.asset[data-new="true"]', $('#ies-list-display')).remove();
            for (var i = 0; i < iesInput.files.length; i++) {

                var file = iesInput.files[i];
                var fileDisplayIES = document.createElement('li');
                fileDisplayIES.setAttribute("class", "testingies asset col-25");
                fileDisplayIES.setAttribute("data-id", file.name);
                fileDisplayIES.setAttribute("data-name", file.name);
                fileDisplayIES.setAttribute("data-new", "true");
                fileDisplayIES.innerHTML = (i + 1) + ': ' + file.name + '<input type="text" data-name="' + file.name + '" class="iesLabel" id="selector" /><a onclick="removeByName(\'' + file.name + '\')">Borrar</a>';
                iesListDisplay.appendChild(fileDisplayIES);
                iesListDisplay.appendChild(fileDisplayIES);

            }

        });

    })();

    (function () {

        $('#form1').submit(function () {

            $('input.fileLabel').each(function (i, e) {
                var o = $('#labeledAssets').val();
                $('#labeledAssets').val(o + '|' + $(e).data('name') + '^' + $(e).val());
            });

            $('input.iesLabel').each(function (i, e) {
                var o = $('#labeledAssets').val();
                $('#labeledAssets').val(o + '|' + $(e).data('name') + '^' + $(e).val());
            });

            return true;
        });

    })();


</script>