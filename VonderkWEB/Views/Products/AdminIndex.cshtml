@using VonderkWEB.Models
@model HomeViewModel
@{
    ViewBag.Title = "AdminIndex";
}

<div class="content">

    <h2>AdminIndex</h2>


    <script>
        $(function () {

            $("#sortable2").sortable();
            $("#sortable2").disableSelection();
        });
    </script>
    <style>

        #sortable {
            list-style-type: none;
            margin: 0;
            padding: 0;
            width: 800px;
        }

            #sortable li {
                margin: 3px 3px 3px 0;
                padding: 1px;
                float: left;
                width: 200px;
                font-size: 1em;
                text-align: center;
            }

                #sortable li span {
                    position: absolute;
                    margin-left: -1.3em;
                }

        #sortable2 {
            list-style-type: none;
            margin: 0;
            padding: 0;
            width: 800px;
        }

            #sortable2 li {
                margin: 3px 3px 3px 0;
                padding: 1px;
                float: left;
                width: 200px;
                font-size: 1em;
                text-align: center;
            }
    </style>

    <h2>Admin Productos</h2>
    <p>
        @Html.ActionLink("Crear nuevo Producto", "Create")
    </p>

    <table>
        <tr>
            <th>
                Categoria
            </th>
            <th>
                Marca
            </th>
            <th>
                Nombre
            </th>

            <th>
                Imagen
            </th>

            <th></th>
        </tr>
        @foreach (var item in Model.Products)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Brand.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>

                <td>
                    @*//<img src="/Images/ + item.CodProdCorregido + "/" + item.Imagen)" alt="Photo" width="100" height="100" />*@
                </td>

                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ProductID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.ProductID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.ProductID })
                </td>
            </tr>
        }
    </table>

    <div class="demo">
        <h2>Arrastrar y soltar para cambiar el orden de la grilla</h2> <button type="button" onclick="display_array();">Re-ordenar Grilla!</button>
        <ul id="sortable">
            @foreach (var item in Model.Products.OrderBy(x => x.SortOrder))
        {

            <li class="ui-state-default"><img src="#" alt="Photo" width="100" height="100" class="img_class"> @Html.DisplayFor(modelItem => item.Name)</li>


    }

        </ul>



    </div><!-- End demo -->

</div>

<script>

    $(function () {

        //-------------step 1
        var $sortableList = $("#sortable");

        var sortEventHandler = function (event, ui) {
            console.log("New sort order!");

        };

        $sortableList.sortable({
            stop: sortEventHandler
        });

        // You can also set the event handler on an already existing Sortable widget this way:

        $sortableList.on("sortchange", sortEventHandler);

        //-------------step 2




        var listElements = $sortableList.children();

        console.log(listElements); // [ <li>, <li>, ... ]

        var listValues = [];

        //$( "li" ).each( function( index, element ){
        //console.log( $( this ).text() );
        //listValues.push(element.innerText);
        //listValues.push($( this ).text());
        //});


        //$( "li" ).each( function( index, element ){
        //console.log( $( this ).text() );
        //});

        listElements.each(function (index, element) {
            //listElements.forEach(function(element){
            listValues.push(element.innerText);
        });

        //listElements.each(function(element){
        //listElements.forEach(function(element){
        //listValues.push(element.innerText);
        //});

        console.log(listValues); // [ "Item 1", "Item 2", ... ]


    });


    function display_array() {

        //-------------step 1
        var $sortableList = $("#sortable");

        var sortEventHandler = function (event, ui) {


        };

        $sortableList.sortable({
            stop: sortEventHandler
        });

        // You can also set the event handler on an already existing Sortable widget this way:

        $sortableList.on("sortchange", sortEventHandler);

        //-------------step 2




        var listElements = $sortableList.children();



        var listValues = [];
        listElements.each(function (index, element) {
            listValues.push(element.innerText);
        });

        console.log(listValues); // [ "Item 1", "Item 2", ... ]

        //-------------step 3
        var serviceURL = '/Products/FirstAjax';

        $.ajax({
            type: "POST",
            url: serviceURL,
            data: { listValues: listValues },
            success: successFunc,
            error: errorFunc
        });

        function successFunc(data, status) {
            alert(data);
        }

        function errorFunc() {
            alert('error');
        }

    }





</script>