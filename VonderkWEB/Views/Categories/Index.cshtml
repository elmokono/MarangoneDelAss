@model IEnumerable<VonderkWEB.Models.Category>

@{
    ViewBag.Title = "Index";
}

<div class="content">

    <style>
        #sortable {
            list-style-type: none;
            padding: 0;
            width: 60%;
        }

            #sortable li {
                margin: 0 3px 3px 3px;
                padding: 0.4em;
                padding-left: 1.5em;
                font-size: 1.1em;
            }

                #sortable li span {
                    position: absolute;
                    margin-left: -1.3em;
                }
    </style>
    <div class="content">

        <h2>Index</h2>

        <p>
            <span class="crear-nuevo-producto">
                @Html.ActionLink("Crear nueva categoría", "Create")
            </span>
        </p>
        <table class="table">
            <tr>
                <th>
                    Nombre
                </th>
                <th>
                    Imagen
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>


                        <img src="~/Images/Categories/@item.FileName" alt="Photo" width="100" height="100" />
                    </td>
                    <td>
                        @Html.ActionLink("Editar", "Edit", new { id = item.CategoryID }) |
                        @Html.ActionLink("Ver", "Details", new { id = item.CategoryID }) |
                        @Html.ActionLink("Eliminar", "dELETE", new { id = item.CategoryID })
                    </td>
                </tr>
            }

        </table>

        <div class="demo">

            <h2>Arrastrar y soltar para cambiar el orden del listado</h2><br><br>

            <ul id="sortable">

                @foreach (var item in Model.OrderBy(x => x.SortOrder))
                {
                    <li class="ui-state-default"> @Html.DisplayFor(modelItem => item.Name)</li>


                }


            </ul>
            <br><br>

            <button type="button" onclick="display_array();">Re-ordenar lista!</button>



        </div><!-- End demo -->
    </div>



</div>
<script>

    $(function () {

        //-------------step 1
        var $sortableList = $("#sortable");

        var sortEventHandler = function (event, ui) {
            console.log("New sort order!");

        };

        $sortableList.sortable({
            stop: sortEventHandler
        });

        // You can also set the event handler on an already existing Sortable widget this way:

        $sortableList.on("sortchange", sortEventHandler);

        //-------------step 2

        var listElements = $sortableList.children();

        console.log(listElements); // [ <li>, <li>, ... ]

        var listValues = [];

        //$( "li" ).each( function( index, element ){
        //console.log( $( this ).text() );
        //listValues.push(element.innerText);
        //listValues.push($( this ).text());
        //});


        //$( "li" ).each( function( index, element ){
        //console.log( $( this ).text() );
        //});

        listElements.each(function (index, element) {
            //listElements.forEach(function(element){
            listValues.push(element.innerText);
        });

        //listElements.each(function(element){
        //listElements.forEach(function(element){
        //listValues.push(element.innerText);
        //});

        console.log(listValues); // [ "Item 1", "Item 2", ... ]


    });


    function display_array() {

        //-------------step 1
        var $sortableList = $("#sortable");

        var sortEventHandler = function (event, ui) {
            console.log("New sort order!");

        };

        $sortableList.sortable({
            stop: sortEventHandler
        });

        // You can also set the event handler on an already existing Sortable widget this way:

        $sortableList.on("sortchange", sortEventHandler);

        //-------------step 2




        var listElements = $sortableList.children();

        console.log(listElements); // [ <li>, <li>, ... ]

        var listValues = [];

        //$( "li" ).each( function( index, element ){
        //console.log( $( this ).text() );
        //listValues.push(element.innerText);
        //listValues.push($( this ).text());
        //});


        //$( "li" ).each( function( index, element ){
        //console.log( $( this ).text() );
        //});
        var listValues = [];
        listElements.each(function (index, element) {
            //listElements.forEach(function(element){
            listValues.push(element.innerText);
        });

        //listElements.each(function(element){
        //listElements.forEach(function(element){
        //listValues.push(element.innerText);
        //});

        console.log(listValues); // [ "Item 1", "Item 2", ... ]

        //-------------step 3
        var serviceURL = '/Categories/FirstAjax';

        $.ajax({
            type: "POST",
            url: serviceURL,
            data: { listValues: listValues },
            success: successFunc,
            error: errorFunc
        });

        function successFunc(data, status) {
            alert(data);
        }

        function errorFunc() {
            alert('error');
        }

    }





</script>
